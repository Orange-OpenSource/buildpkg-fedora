#!/bin/bash
# 
#  Copyright (c) 2017 Orange
#  
#  Authors:
#    Christian Bayle <christian.bayle@orange.com>
#    Michel Decima <michel.decima@orange.com>
#  
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License version 2 as published 
#  by the Free Software Foundation.
# 

PPA_HOST="gitlab.io"

die() {
    echo "$(basename $0): $@" >&2 ; exit 1
}

# RELEASE_DIST is a lower-case synonym for the distributor id, like centos
# RELEASE_NAME is decimal part of release version id, like 7 
#
# Examples:
#   CentOS Linux release 7.3.1611 (Core)                -> centos/7
#   Fedora release 25 (Twenty Five)                     -> fedora/25
#   Red Hat Enterprise Linux Server release 7.1 (Maipo) -> rhel/7
# 
case $(cat /etc/system-release) in
    CentOS*)        RELEASE_DIST="centos" ;;
    Fedora*)        RELEASE_DIST="fedora" ;;
    Red*)           RELEASE_DIST="rhel" ;;
    *)              RELEASE_DIST="unknown" ;;
esac
RELEASE_NAME=$(egrep -o '[0-9.]{1,}' /etc/system-release | cut -d. -f1)


#############################################################################

ppa_yum_print() {		# project_namespace project_name
    local repo_name="$1-$2"
    local ppa_url="http://$1.$PPA_HOST/$2"
    cat << EOF
[$repo_name]
name=Gitlab $repo_name - $RELEASE_NAME - \$basearch
baseurl=$ppa_url/$RELEASE_DIST/$RELEASE_NAME/\$basearch
enabled=1
metadata_expire=15m
gpgcheck=1
repo_gpgcheck=0
gpgkey=$ppa_url/GPG_PUBLIC_KEY
skip_if_unavailable=False

[$repo_name-source]
name=Gitlab $repo_name - $RELEASE_NAME - Sources
baseurl=$ppa_url/$RELEASE_DIST/$RELEASE_NAME/Source
enabled=0
metadata_expire=15m
gpgcheck=1
repo_gpgcheck=0
gpgkey=$ppa_url/GPG_PUBLIC_KEY
skip_if_unavailable=True
EOF
}

ppa_yum_install() {                 # project_namespace project_name
    local yum_repo="/etc/yum.repos.d/gitlab-$1-$2.repo"
    local key_url="http://$1.$PPA_HOST/$2/GPG_PUBLIC_KEY"
    local key_file="/etc/pki/rpm-gpg/gitlab-$1-$2.gpgkey"
    curl -fLsS -o $key_file $key_url \
        && rpm --import $key_file \
        || die "import key failed: $key_url"
    ppa_yum_print $@ > $yum_repo \
        || die "install repo failed: $yum_repo"
}

ppa_yum_remove() {                  # project_namespace project_name
    local yum_repo="/etc/yum.repos.d/gitlab-$1-$2.repo"
    rm -v $yum_repo
}

ppa_yum_help() {
    cat << EOF
Usage: $(basename $0) [OPTION]... PROJECT [PROJECT]...

Examples:
     yum-add-gitlab Orange-OpenSource/gitlab-buildipkg-tools
     yum-add-gitlab --remove Orange-OpenSource/gitlab-buildipkg-tools

EOF
}

#############################################################################

ARGPARSER=$(getopt \
    -o rH: \
    --long help,removei,host: \
    -n $(basename $0) -- "$@")
if [ $? != 0 ] ; then die "getopt failed" ; fi
eval set -- "$ARGPARSER"
while true ; do
    case "$1" in
        --help)         ppa_yum_help ; exit 0 ;;
        --remove)       REMOVE=yes ; shift ;;
        -H|--host)      PPA_HOST=$2 ; shift 2 ;;
        --)             shift ; break ;;
        *)              die "Internal error!" ;;
    esac
done

for project in $@ ; do
    project_namespace=$(cut -d/ -f1 <<< "$project")
    project_name=$(cut -d/ -f2 <<< "$project")
    if [ "$project" != "$project_namespace/$project_name" ] ; then
        die "bad argument: $project"
    fi
    if [ "$REMOVE" = "yes" ] ; then
        (( EUID == 0 )) || die "not root"
        ppa_yum_remove $project_namespace $project_name \
            || die "remove failed: $project"
    else
        (( EUID == 0 )) || die "not root"
        ppa_yum_install $project_namespace $project_name \
            || die "install failed: $project"
    fi     
done

